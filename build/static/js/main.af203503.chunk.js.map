{"version":3,"sources":["state/AppReducer.js","state/UIReducer.js","components/SignIn/SignInActions.js","state/SessionReducer.js","components/Loading/AppLoading.jsx","components/NotificationCenter/Notification.jsx","components/NotificationCenter/NotificationCenter.jsx","controllers/App/App.jsx","routes/index.js","state/index.js","middleware/sentryMiddleware.js","utils/api.js","utils/createStore.js","index.jsx","state/NotificationsReducer.js","components/NotificationCenter/NotificationActions.js"],"names":["STATEMENT","CATEGORIES","TRANSACTIONS","initialState","isLoading","categories","isFetching","transactions","combineReducers","state","type","payload","concat","nextState","clone","changedIndex","findIndex","item","id","DATE","LOADING_COMPLETE","date","Date","dashboard","overview","categoryList","overallSpending","categoryBreakdown","transactionOverview","loginAction","props","dispatch","getState","a","getFirebase","api","firebase","SIGN_IN","login","message","Error","requestAccessAction","body","REQUEST_ACCESS","path","then","requestAccess","errors","console","warn","localStorage","setItem","forgotPasswordAction","email","FORGOT_PASSWORD","resetPassword","catch","error","logoutAction","logout","SESSION","token","claims","authTime","fetched","issuedAtTime","expirationTime","signInProvider","signInSecondFactor","session","connect","app","className","Loading","withOverlay","mapDispatchToProps","deleteThisNotification","deleteNotification","subtitle","title","toUpperCase","substr","cn","kind","lowContrast","role","caption","onCloseButtonClick","dequeue","dequeueNotification","notifications","memoDequeue","useRef","current","useEffect","length","setTimeout","map","notification","key","routes","component","route","useState","isMenuOpen","setIsMenuOpen","Header","aria-label","HeaderName","prefix","href","HeaderGlobalBar","HeaderGlobalAction","onClick","renderRoutes","exact","loadable","reducers","ui","sentryMiddleware","next","action","auth","Sentry","isEmulating","process","REACT_APP_EMULATING","options","functions","emulatorOrigin","func","httpsCallable","isBodyObject","Object","keys","data","result","Array","isArray","resp","createStoreHelper","history","initial","createStore","router","connectRouter","firebaseReducer","firestore","firestoreReducer","applyMiddleware","thunk","withExtraArgument","routerMiddleware","createLogger","SentryMiddleware","createBrowserHistory","store","firebaseProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","window","onbudget","initializeApp","appId","apiKey","projectId","authDomain","databaseURL","storageBucket","measurementId","messagingSenderId","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","render","document","getElementById","start","NOTIFICATION","slice","filter","enqueueNotification","uuidv4"],"mappings":"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","file":"static/js/main.af203503.chunk.js","sourcesContent":["import clone from \"clone-deep\";\nimport { combineReducers } from \"redux\";\n\nexport const STATEMENT = \"STATEMENT\";\nexport const CATEGORIES = \"CATEGORIES\";\nexport const TRANSACTIONS = \"TRANSACTIONS\";\n\nconst initialState = {\n  isLoading: true,\n  categories: [],\n  isFetching: false,\n  transactions: [],\n};\n\nconst isLoading = (state = initialState.isLoading, { type }) => {\n  switch (type) {\n    case \"@@reactReduxFirebase/LOGIN\":\n    case \"@@reactReduxFirebase/LOGIN_ERROR\":\n    case \"@@reactReduxFirebase/AUTH_EMPTY_CHANGE\":\n      return false;\n    case \"@@reactReduxFirebase/AUTHENTICATION_INIT_STARTED\":\n      return true;\n    default:\n      return state;\n  }\n};\n\nconst categories = (state = initialState.categories, { type, payload }) => {\n  switch (type) {\n    case `${CATEGORIES}_SUCCESS`:\n      return payload;\n    case `ADD_${CATEGORIES}_SUCCESS`:\n      return state.concat(payload);\n    case `EDIT_${CATEGORIES}_SUCCESS`:\n      const nextState = clone(state);\n\n      const changedIndex = nextState.findIndex(\n        (item) => item.id === payload.id\n      );\n\n      nextState[changedIndex] = payload;\n\n      return nextState;\n    case `${CATEGORIES}_PENDING`:\n    case `${CATEGORIES}_FAILURE`:\n    default:\n      return state;\n  }\n};\n\nconst transactions = (state = initialState.transactions, { type, payload }) => {\n  switch (type) {\n    case `${TRANSACTIONS}_SUCCESS`:\n      return payload;\n    case `${TRANSACTIONS}_BY_MONTH_SUCCESS`:\n      return state.concat(payload);\n    case `${TRANSACTIONS}_PENDING`:\n    case `${TRANSACTIONS}_FAILURE`:\n    default:\n      return state;\n  }\n};\n\nconst isFetching = (state = initialState.isFetching, { type }) => {\n  switch (type) {\n    case `${CATEGORIES}_PENDING`:\n      return true;\n    case `${CATEGORIES}_SUCCESS`:\n    case `${CATEGORIES}_FAILURE`:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  isLoading,\n  categories,\n  isFetching,\n  transactions,\n});\n","import { combineReducers } from \"redux\";\n\nexport const DATE = \"DATE\";\nexport const LOADING_COMPLETE = \"LOADING_COMPLETE\";\n\nconst now = new Date();\n\nconst initialState = {\n  date: now,\n  dashboard: {\n    isLoading: {\n      overview: true,\n      categoryList: true,\n      overallSpending: true,\n      categoryBreakdown: true,\n      transactionOverview: true,\n    },\n  },\n};\n\nconst date = (state = initialState.date, { type, payload }) => {\n  switch (type) {\n    case `SET_${DATE}`:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nconst dashboard = (state = initialState.dashboard, { type, payload }) => {\n  switch (type) {\n    case `SET_${LOADING_COMPLETE}`:\n      return {\n        ...state,\n        isLoading: {\n          ...state.isLoading,\n          [payload]: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  date,\n  dashboard,\n});\n","import { SIGN_IN, REQUEST_ACCESS, FORGOT_PASSWORD } from \"state/SessionReducer\";\n\nexport const loginAction = (props) => async (\n  dispatch,\n  getState,\n  { getFirebase, api },\n  ...rest\n) => {\n  const firebase = getFirebase();\n\n  dispatch({\n    type: `${SIGN_IN}_PENDING`,\n  });\n\n  try {\n    await firebase.login(props);\n\n    dispatch({\n      type: `${SIGN_IN}_SUCCESS`,\n    });\n\n    return;\n  } catch (err) {\n    dispatch({\n      type: `${SIGN_IN}_FAILURE`,\n      payload: err.message,\n    });\n\n    throw new Error(err.message);\n  }\n};\n\nexport const requestAccessAction = (body) => async (\n  dispatch,\n  getState,\n  { getFirebase, api }\n) => {\n  dispatch({\n    type: `${REQUEST_ACCESS}_PENDING`,\n  });\n\n  return api({\n    body,\n    dispatch,\n    getState,\n    getFirebase,\n    path: \"requestAccess\",\n  }).then(({ requestAccess: { errors, ...requestAccess } = {} } = {}) => {\n    console.warn({ errors, requestAccess });\n    if (errors) {\n      dispatch({\n        type: `${REQUEST_ACCESS}_FAILURE`,\n        payload: errors,\n      });\n\n      throw new Error(errors[0].message);\n    } else {\n      dispatch({\n        type: `${REQUEST_ACCESS}_SUCCESS`,\n        payload: requestAccess,\n      });\n    }\n\n    localStorage.setItem(\"hasRequestedAccess\", true);\n\n    return requestAccess;\n  });\n};\n\nexport const forgotPasswordAction = ({ email }) => async (\n  dispatch,\n  getState,\n  { getFirebase, api }\n) => {\n  dispatch({\n    type: `${FORGOT_PASSWORD}_PENDING`,\n  });\n\n  const firebase = getFirebase();\n\n  return firebase.resetPassword(email).catch((error) => {\n    throw new Error(error.message);\n  });\n};\n\nexport const logoutAction = (props) => async (\n  dispatch,\n  getState,\n  { getFirebase, api },\n  ...rest\n) => {\n  const firebase = getFirebase();\n\n  dispatch({\n    type: `${SIGN_IN}_PENDING`,\n  });\n\n  // try {\n  await firebase.logout();\n\n  //   dispatch({\n  //     type: `${SIGN_IN}_SUCCESS`,\n  //   });\n\n  //   return;\n  // } catch (err) {\n  //   dispatch({\n  //     type: `${SIGN_IN}_FAILURE`,\n  //     payload: err.message,\n  //   });\n\n  //   throw new Error(err.message);\n  // }\n};\n","export const SESSION = \"SESSION\";\nexport const SIGN_IN = \"SIGN_IN\";\nexport const REQUEST_ACCESS = \"REQUEST_ACCESS\";\nexport const FORGOT_PASSWORD = \"FORGOT_PASSWORD\";\n\nconst initialState = {\n  token: \"\",\n  claims: [],\n  authTime: \"\",\n  fetched: false,\n  issuedAtTime: \"\",\n  expirationTime: \"\",\n  signInProvider: \"\",\n  signInSecondFactor: \"\",\n};\n\nconst session = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case `${SESSION}_SUCCESS`:\n      return {\n        ...state,\n        ...payload,\n        fetched: true,\n      };\n    case \"@@reactReduxFirebase/AUTH_EMPTY_CHANGE\":\n      return {\n        ...state,\n        fetched: true,\n      };\n    case `${SESSION}_PENDING`:\n    default:\n      return state;\n  }\n};\n\nexport default session;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Loading } from \"carbon-components-react\";\n\nimport \"./AppLoading.scss\";\n\nconst AppLoading = ({ isLoading }) =>\n  isLoading ? (\n    <div className=\"AppLoading\">\n      <Loading withOverlay />{\" \"}\n    </div>\n  ) : null;\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.app.isLoading,\n});\n\nexport default connect(mapStateToProps)(AppLoading);\n","import React from \"react\";\nimport cn from \"classnames\";\nimport { connect } from \"react-redux\";\n\nimport { ToastNotification } from \"carbon-components-react\";\n\nimport { deleteNotification } from \"./NotificationActions\";\n\nconst Notification = ({\n  id,\n  subtitle = \"\",\n  type = \"info\",\n  deleteThisNotification,\n}) => {\n  const handleDelete = () => {\n    deleteThisNotification(id);\n  };\n\n  const title = type[0].toUpperCase() + type.substr(1);\n\n  return (\n    <ToastNotification\n      className={cn(\"Notification\", `Notification--${type}`)}\n      kind={type}\n      lowContrast\n      role=\"alert\"\n      title={title}\n      subtitle={subtitle}\n      caption={false}\n      onCloseButtonClick={handleDelete}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  deleteThisNotification: deleteNotification,\n};\n\nexport default connect(null, mapDispatchToProps)(Notification);\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./NotificationCenter.scss\";\n\nimport { dequeueNotification } from \"./NotificationActions\";\n\nimport Notification from \"./Notification\";\n\nconst NotificationCenter = ({ dequeue, notifications }) => {\n  const memoDequeue = useRef(() => dequeue()).current;\n\n  useEffect(() => {\n    if (notifications.length) {\n      setTimeout(() => {\n        memoDequeue();\n      }, 3000);\n    }\n  }, [notifications, memoDequeue]);\n\n  return (\n    <div className=\"NotificationCenter\">\n      <div className=\"Notification-List\">\n        {notifications.map((notification, key) => (\n          <Notification key={`Notification-${key}`} {...notification} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  dequeue: dequeueNotification,\n};\n\nconst mapStateToProps = (state) => ({\n  notifications: state.notifications,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationCenter);\n","import cn from \"classnames\";\nimport { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { renderRoutes } from \"react-router-config\";\nimport {\n  Header,\n  HeaderName,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n} from \"carbon-components-react\";\n\nimport { FaceMask24 } from \"@carbon/icons-react\";\n\nimport AppLoading from \"components/Loading/AppLoading\";\nimport NotificationCenter from \"components/NotificationCenter/NotificationCenter\";\n\nimport { logoutAction } from \"components/SignIn/SignInActions\";\nimport \"./Header.scss\";\n\nconst App = ({ route, logout }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  if (!route?.routes) {\n    return null;\n  }\n\n  const handleTogglePanel = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const signOut = () => {\n    logout();\n    setIsMenuOpen(false);\n  };\n\n  const todo = () => {\n    console.warn(\"todo\");\n  };\n\n  return (\n    <main className=\"App\">\n      <Header aria-label=\"On Budget\" className=\"Header\">\n        <HeaderName prefix=\"\" href=\"#\">\n          On Budget\n        </HeaderName>\n        <HeaderGlobalBar>\n          <HeaderGlobalAction\n            aria-label=\"Search\"\n            className=\"ProfileAction\"\n            onClick={handleTogglePanel}\n          >\n            <FaceMask24 className=\"Icon\" />\n          </HeaderGlobalAction>\n        </HeaderGlobalBar>\n        <div className=\"DropdownMenu\">\n          <ul className={cn(\"menu\", { \"menu--opened\": isMenuOpen })}>\n            <li className=\"ListItem\">\n              <button className=\"TextButton\" onClick={signOut}>\n                Sign Out\n              </button>\n            </li>\n            <li className=\"ListItem Disabled\">\n              <button className=\"TextButton\" onClick={todo}>\n                Settings [COMING SOON]\n              </button>\n            </li>\n          </ul>\n        </div>\n      </Header>\n      <NotificationCenter />\n      <AppLoading />\n\n      {renderRoutes(route.routes)}\n    </main>\n  );\n};\n\nconst mapDispatchToProps = {\n  logout: logoutAction,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import loadable from \"@loadable/component\";\n\nimport App from \"controllers/App/App\";\n\n// import AdminRoutes from 'routes/admin';\n// import WorkoutRoutes from 'routes/workout';\n\nconst routes = [\n  {\n    component: App,\n    routes: [\n      {\n        path: \"/\",\n        exact: true,\n        component: loadable(() => import(\"controllers/Home/Home\")),\n      },\n    ],\n  },\n];\n\nexport default routes;\n","import ui from \"./UIReducer\";\nimport app from \"./AppReducer\";\nimport session from \"./SessionReducer\";\nimport notifications from \"./NotificationsReducer\";\n\nconst reducers = {\n  ui,\n  app,\n  session,\n  notifications,\n};\n\nexport default reducers;\n","import * as Sentry from \"@sentry/react\";\n\nconst sentryMiddleware = ({ getState, dispatch }) => (next) => (action) => {\n  switch (action.type) {\n    case \"@@reactReduxFirebase/LOGIN\":\n      const { email } = action.auth;\n\n      Sentry.setContext(\"user\", {\n        email,\n      });\n      break;\n    default:\n      break;\n  }\n\n  return next(action);\n};\n\nexport default sentryMiddleware;\n","const isEmulating = !!process.env.REACT_APP_EMULATING;\n\nconst api = async (options) => {\n  const { body, path, dispatch, getFirebase } = options;\n  const firebase = await getFirebase();\n\n  if (isEmulating) {\n    firebase.functions().emulatorOrigin = \"http://localhost:3030\";\n  }\n\n  dispatch({\n    type: \"API_PENDING\",\n    payload: { path },\n  });\n\n  const func = firebase.functions().httpsCallable(path);\n\n  const isBodyObject = Object.keys(body || {}).length;\n\n  return func({ isEmulating, ...(isBodyObject ? body : { body }) })\n    .then(({ data, errors, result }) => {\n      if (Array.isArray(errors) && errors?.length) {\n        dispatch({\n          type: \"API_FAILURE\",\n          payload: { path },\n        });\n        throw new Error(errors[0].message);\n      }\n\n      const payload = {\n        [path]: data || result,\n      };\n\n      dispatch({\n        type: `API_SUCCESS`,\n        payload: {\n          path,\n        },\n      });\n\n      return payload;\n    })\n    .catch((resp) => {\n      dispatch({\n        type: \"API_FAILURE\",\n        payload: { path },\n      });\n      console.error(resp);\n      // throw new Error(\"SOME ERROR\");\n    });\n};\n\nexport default api;\n","import thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { SentryMiddleware } from \"middleware\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { getFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { routerMiddleware, connectRouter } from \"connected-react-router\";\n\nimport api from \"./api\";\n\nconst createStoreHelper = ({\n  history,\n  reducers,\n  initial = {},\n  routes = [],\n}) => {\n  return createStore(\n    combineReducers({\n      router: connectRouter(history),\n      firebase: firebaseReducer,\n      firestore: firestoreReducer,\n      ...reducers,\n    }),\n    initial,\n    applyMiddleware(\n      thunk.withExtraArgument({ getFirebase, api }),\n      routerMiddleware(history),\n      createLogger(),\n      SentryMiddleware\n    )\n  );\n};\n\nexport default createStoreHelper;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { createBrowserHistory } from \"history\";\nimport { renderRoutes } from \"react-router-config\";\nimport { ConnectedRouter } from \"connected-react-router\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\n\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\n\nimport routes from \"./routes\";\nimport reducers from \"./state\";\nimport createStore from \"./utils/createStore\";\n\nimport \"./styles/index.scss\";\n\nconst start = () => {\n  let initial = {};\n  const history = createBrowserHistory();\n\n  const store = createStore({\n    routes,\n    history,\n    initial,\n    reducers,\n  });\n\n  const firebaseProps = {\n    firebase,\n    config: {\n      userProfile: \"users\",\n      useFirestoreForProfile: true,\n    },\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n  };\n\n  window.onbudget = window.onbudget || store;\n\n  firebase.initializeApp({\n    appId: process.env.REACT_APP_FIREBASE_appId,\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\n    measurementId: process.env.REACT_APP_FIREBASE_measurementId,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId,\n  });\n\n  firebase.firestore();\n\n  Sentry.init({\n    dsn:\n      \"https://700dc73d529244cebcb02cc6e5b2ed77@o472551.ingest.sentry.io/5506363\",\n    integrations: [new Integrations.BrowserTracing()],\n\n    // We recommend adjusting this value in production, or using tracesSampler\n    // for finer control\n    tracesSampleRate: 1.0,\n  });\n\n  render(\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...firebaseProps}>\n        <ConnectedRouter history={history}>\n          {renderRoutes(routes)}\n        </ConnectedRouter>\n      </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n\nstart();\n","export const NOTIFICATION = \"NOTIFICATION\";\n\nconst initialState = [];\n\nconst notifications = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case `${NOTIFICATION}_ENQUEUE`:\n      return state.concat(payload);\n    case `${NOTIFICATION}_DEQUEUE`:\n      return state.slice(1);\n    case `${NOTIFICATION}_DELETE`:\n      return state.filter(({ id }) => id !== payload);\n    default:\n      return state;\n  }\n};\n\nexport default notifications;\n","import { NOTIFICATION } from \"state/NotificationsReducer\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const enqueueNotification = (notification) => (dispatch) => {\n  dispatch({\n    type: `${NOTIFICATION}_ENQUEUE`,\n    payload: {\n      id: uuidv4(),\n      type: \"info\",\n      ...notification,\n    },\n  });\n};\n\nexport const dequeueNotification = () => (dispatch) => {\n  dispatch({\n    type: `${NOTIFICATION}_DEQUEUE`,\n  });\n};\n\nexport const deleteNotification = (id) => (dispatch) => {\n  dispatch({\n    type: `${NOTIFICATION}_DELETE`,\n    payload: id,\n  });\n};\n"],"sourceRoot":""}